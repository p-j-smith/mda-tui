name: Tests
on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main

concurrency:
  # Specific group naming so CI is only cancelled
  # within same PR or on merge to main
  group: ${{ github.ref }}-${{ github.head_ref }}-${{ github.workflow }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11"]

    steps:

    # first step checks out the code into
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: "pip"
        cache-dependency-path: "pyproject.toml"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions

    - name: Test with tox
      run: tox

    # Using Codecov's action, upload the coverage report for the triggering commit/PR
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        files: coverage.xml
        fail_ci_if_error: true
        verbose: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  twine_check:
    if: "github.repository == 'p-j-smith/mda-tui'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        pip install setuptools cython numpy twine wheel build check-manifest

    - name: Build package
      run: |
        python -m build .

    - name: Check package build
      run: |
        DISTRIBUTION=$(ls -t1 dist/mda-tui-*.tar.gz | head -n 1)
        test -n "${DISTRIBUTION}" || { echo "no dist/distribution mda-tui-*.tar.gz found"; exit 1; }
        echo "twine check $DISTRIBUTION"
        twine check $DISTRIBUTION

    - name: Check the MANIFEST.in is correct
      run: |
        check-manifest

    - name: Upload sdist
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  release-test:
    name: Publish to Test PyPI
    runs-on: ubuntu-latest
    needs: [test, twine_check]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: dist
      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true

  release:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [release-test]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: false  # fail if already exists

name: GH Actions CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  # Specific group naming so CI is only cancelled
  # within same PR or on merge to main
  group: ${{ github.ref }}-${{ github.head_ref }}-${{ github.workflow }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash 

jobs:
  test:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11"]

    steps:

    # first step checks out the code into
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: "pip"
        cache-dependency-path: "pyproject.toml"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install ".[test]"

    - name: Run the tests
      run: |
        pytest -vv --cov=src/mda_tui --cov-report=xml

    # Using Codecov's action, upload the coverage report for the triggering commit/PR
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        files: coverage.xml
        fail_ci_if_error: true
        verbose: true
          
  twine_check:
    if: "github.repository == 'p-j-smith/mda-tui'"
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install setuptools cython numpy twine

    - name: Build package
      run: |
        python build

    - name: Check package build
      run: |
        DISTRIBUTION=$(ls -t1 dist/mda-tui-*.tar.gz | head -n 1)
        test -n "${DISTRIBUTION}" || { echo "no distribution dist/mda-tui-*.tar.gz found"; exit 1; }
        echo "twine check $DISTRIBUTION"
        twine check $DISTRIBUTION
